
lesson_10.elf:     file format elf32-avr

Sections:
Idx Name          Size      VMA       LMA       File off  Algn
  0 .text         00000252  00000000  00000000  00000074  2**1
                  CONTENTS, ALLOC, LOAD, READONLY, CODE
  1 .data         00000014  00800060  00000252  000002c6  2**0
                  CONTENTS, ALLOC, LOAD, DATA
  2 .comment      00000030  00000000  00000000  000002da  2**0
                  CONTENTS, READONLY
  3 .note.gnu.avr.deviceinfo 0000003c  00000000  00000000  0000030c  2**2
                  CONTENTS, READONLY
  4 .debug_aranges 00000028  00000000  00000000  00000348  2**0
                  CONTENTS, READONLY, DEBUGGING
  5 .debug_info   000009ef  00000000  00000000  00000370  2**0
                  CONTENTS, READONLY, DEBUGGING
  6 .debug_abbrev 00000586  00000000  00000000  00000d5f  2**0
                  CONTENTS, READONLY, DEBUGGING
  7 .debug_line   00000434  00000000  00000000  000012e5  2**0
                  CONTENTS, READONLY, DEBUGGING
  8 .debug_frame  00000050  00000000  00000000  0000171c  2**2
                  CONTENTS, READONLY, DEBUGGING
  9 .debug_str    00000306  00000000  00000000  0000176c  2**0
                  CONTENTS, READONLY, DEBUGGING
 10 .debug_loc    00000566  00000000  00000000  00001a72  2**0
                  CONTENTS, READONLY, DEBUGGING
 11 .debug_ranges 00000018  00000000  00000000  00001fd8  2**0
                  CONTENTS, READONLY, DEBUGGING

Disassembly of section .text:

00000000 <__vectors>:
   0:	12 c0       	rjmp	.+36     	; 0x26 <__ctors_end>
   2:	2d c0       	rjmp	.+90     	; 0x5e <__vector_1>
   4:	2b c0       	rjmp	.+86     	; 0x5c <__bad_interrupt>
   6:	2a c0       	rjmp	.+84     	; 0x5c <__bad_interrupt>
   8:	29 c0       	rjmp	.+82     	; 0x5c <__bad_interrupt>
   a:	28 c0       	rjmp	.+80     	; 0x5c <__bad_interrupt>
   c:	27 c0       	rjmp	.+78     	; 0x5c <__bad_interrupt>
   e:	26 c0       	rjmp	.+76     	; 0x5c <__bad_interrupt>
  10:	25 c0       	rjmp	.+74     	; 0x5c <__bad_interrupt>
  12:	24 c0       	rjmp	.+72     	; 0x5c <__bad_interrupt>
  14:	23 c0       	rjmp	.+70     	; 0x5c <__bad_interrupt>
  16:	22 c0       	rjmp	.+68     	; 0x5c <__bad_interrupt>
  18:	21 c0       	rjmp	.+66     	; 0x5c <__bad_interrupt>
  1a:	20 c0       	rjmp	.+64     	; 0x5c <__bad_interrupt>
  1c:	1f c0       	rjmp	.+62     	; 0x5c <__bad_interrupt>
  1e:	1e c0       	rjmp	.+60     	; 0x5c <__bad_interrupt>
  20:	1d c0       	rjmp	.+58     	; 0x5c <__bad_interrupt>
  22:	1c c0       	rjmp	.+56     	; 0x5c <__bad_interrupt>
  24:	1b c0       	rjmp	.+54     	; 0x5c <__bad_interrupt>

00000026 <__ctors_end>:
  26:	11 24       	eor	r1, r1
  28:	1f be       	out	0x3f, r1	; 63
  2a:	cf e5       	ldi	r28, 0x5F	; 95
  2c:	d4 e0       	ldi	r29, 0x04	; 4
  2e:	de bf       	out	0x3e, r29	; 62
  30:	cd bf       	out	0x3d, r28	; 61

00000032 <__do_copy_data>:
  32:	10 e0       	ldi	r17, 0x00	; 0
  34:	a0 e6       	ldi	r26, 0x60	; 96
  36:	b0 e0       	ldi	r27, 0x00	; 0
  38:	e2 e5       	ldi	r30, 0x52	; 82
  3a:	f2 e0       	ldi	r31, 0x02	; 2
  3c:	02 c0       	rjmp	.+4      	; 0x42 <__SREG__+0x3>
  3e:	05 90       	lpm	r0, Z+
  40:	0d 92       	st	X+, r0
  42:	a4 37       	cpi	r26, 0x74	; 116
  44:	b1 07       	cpc	r27, r17
  46:	d9 f7       	brne	.-10     	; 0x3e <__SP_H__>

00000048 <__do_clear_bss>:
  48:	20 e0       	ldi	r18, 0x00	; 0
  4a:	a4 e7       	ldi	r26, 0x74	; 116
  4c:	b0 e0       	ldi	r27, 0x00	; 0
  4e:	01 c0       	rjmp	.+2      	; 0x52 <.do_clear_bss_start>

00000050 <.do_clear_bss_loop>:
  50:	1d 92       	st	X+, r1

00000052 <.do_clear_bss_start>:
  52:	a4 37       	cpi	r26, 0x74	; 116
  54:	b2 07       	cpc	r27, r18
  56:	e1 f7       	brne	.-8      	; 0x50 <.do_clear_bss_loop>
  58:	1e d0       	rcall	.+60     	; 0x96 <main>
  5a:	f9 c0       	rjmp	.+498    	; 0x24e <_exit>

0000005c <__bad_interrupt>:
  5c:	d1 cf       	rjmp	.-94     	; 0x0 <__vectors>

0000005e <__vector_1>:
    0b00000111, // 7
    0b01111111, // 8
    0b01101111, // 9
};

ISR(INT0_vect) {
  5e:	1f 92       	push	r1
  60:	0f 92       	push	r0
  62:	0f b6       	in	r0, 0x3f	; 63
  64:	0f 92       	push	r0
  66:	11 24       	eor	r1, r1
  68:	2f 93       	push	r18
  6a:	8f 93       	push	r24
  6c:	9f 93       	push	r25
    SEG7_PORT = digits[6];
  6e:	80 91 6c 00 	lds	r24, 0x006C	; 0x80006c <__DATA_REGION_ORIGIN__+0xc>
  72:	88 bb       	out	0x18, r24	; 24
	#else
		//round up by default
		__ticks_dc = (uint32_t)(ceil(fabs(__tmp)));
	#endif

	__builtin_avr_delay_cycles(__ticks_dc);
  74:	2f e1       	ldi	r18, 0x1F	; 31
  76:	81 ea       	ldi	r24, 0xA1	; 161
  78:	97 e0       	ldi	r25, 0x07	; 7
  7a:	21 50       	subi	r18, 0x01	; 1
  7c:	80 40       	sbci	r24, 0x00	; 0
  7e:	90 40       	sbci	r25, 0x00	; 0
  80:	e1 f7       	brne	.-8      	; 0x7a <__vector_1+0x1c>
  82:	00 c0       	rjmp	.+0      	; 0x84 <__vector_1+0x26>
  84:	00 00       	nop
    _delay_ms(2500);
}
  86:	9f 91       	pop	r25
  88:	8f 91       	pop	r24
  8a:	2f 91       	pop	r18
  8c:	0f 90       	pop	r0
  8e:	0f be       	out	0x3f, r0	; 63
  90:	0f 90       	pop	r0
  92:	1f 90       	pop	r1
  94:	18 95       	reti

00000096 <main>:

int main(void)
{
    SEG7_DDR = 0b11111111;
  96:	8f ef       	ldi	r24, 0xFF	; 255
  98:	87 bb       	out	0x17, r24	; 23
    SEG7_PORT = 0b00000000;
  9a:	18 ba       	out	0x18, r1	; 24

    DDRD &= ~((1<<3) | (1<<2));
  9c:	81 b3       	in	r24, 0x11	; 17
  9e:	83 7f       	andi	r24, 0xF3	; 243
  a0:	81 bb       	out	0x11, r24	; 17
    PORTD |= (1<<3) | (1<<2);
  a2:	82 b3       	in	r24, 0x12	; 18
  a4:	8c 60       	ori	r24, 0x0C	; 12
  a6:	82 bb       	out	0x12, r24	; 18

    //настройка прериывани€
    MCUCR |= (1<<ISC01); // прерывание int0 по спаду
  a8:	85 b7       	in	r24, 0x35	; 53
  aa:	82 60       	ori	r24, 0x02	; 2
  ac:	85 bf       	out	0x35, r24	; 53
    MCUCR &= ~(1<<ISC00);
  ae:	85 b7       	in	r24, 0x35	; 53
  b0:	8e 7f       	andi	r24, 0xFE	; 254
  b2:	85 bf       	out	0x35, r24	; 53

    GICR |= (1<<INT0); // –азрешаем прерывание оп int0
  b4:	8b b7       	in	r24, 0x3b	; 59
  b6:	80 64       	ori	r24, 0x40	; 64
  b8:	8b bf       	out	0x3b, r24	; 59

    //SREG |= (1<<7); // разрешаем глобальные прерывани€
    sei(); // разрешаем глобальные прерывани€, анлог строчки выше.
  ba:	78 94       	sei
    //SREG &= ~(1<<7); // запрещаем глобальные прерывани€
    //cli(); // запрещаем глобальные прерывани€, анлог строчки выше.

    while (1)
    {
        SEG7_PORT = digits[0];
  bc:	e0 e6       	ldi	r30, 0x60	; 96
  be:	f0 e0       	ldi	r31, 0x00	; 0
  c0:	80 81       	ld	r24, Z
  c2:	88 bb       	out	0x18, r24	; 24
  c4:	2f e5       	ldi	r18, 0x5F	; 95
  c6:	8a ee       	ldi	r24, 0xEA	; 234
  c8:	90 e0       	ldi	r25, 0x00	; 0
  ca:	21 50       	subi	r18, 0x01	; 1
  cc:	80 40       	sbci	r24, 0x00	; 0
  ce:	90 40       	sbci	r25, 0x00	; 0
  d0:	e1 f7       	brne	.-8      	; 0xca <main+0x34>
  d2:	00 c0       	rjmp	.+0      	; 0xd4 <main+0x3e>
  d4:	00 00       	nop
        _delay_ms(300);
        SEG7_PORT = digits[1];
  d6:	82 81       	ldd	r24, Z+2	; 0x02
  d8:	88 bb       	out	0x18, r24	; 24
  da:	2f e5       	ldi	r18, 0x5F	; 95
  dc:	8a ee       	ldi	r24, 0xEA	; 234
  de:	90 e0       	ldi	r25, 0x00	; 0
  e0:	21 50       	subi	r18, 0x01	; 1
  e2:	80 40       	sbci	r24, 0x00	; 0
  e4:	90 40       	sbci	r25, 0x00	; 0
  e6:	e1 f7       	brne	.-8      	; 0xe0 <main+0x4a>
  e8:	00 c0       	rjmp	.+0      	; 0xea <main+0x54>
  ea:	00 00       	nop
        _delay_ms(300);
        SEG7_PORT = digits[2];
  ec:	84 81       	ldd	r24, Z+4	; 0x04
  ee:	88 bb       	out	0x18, r24	; 24
  f0:	2f e5       	ldi	r18, 0x5F	; 95
  f2:	8a ee       	ldi	r24, 0xEA	; 234
  f4:	90 e0       	ldi	r25, 0x00	; 0
  f6:	21 50       	subi	r18, 0x01	; 1
  f8:	80 40       	sbci	r24, 0x00	; 0
  fa:	90 40       	sbci	r25, 0x00	; 0
  fc:	e1 f7       	brne	.-8      	; 0xf6 <main+0x60>
  fe:	00 c0       	rjmp	.+0      	; 0x100 <main+0x6a>
 100:	00 00       	nop
        _delay_ms(300);
        SEG7_PORT = digits[3];
 102:	86 81       	ldd	r24, Z+6	; 0x06
 104:	88 bb       	out	0x18, r24	; 24
 106:	2f e5       	ldi	r18, 0x5F	; 95
 108:	8a ee       	ldi	r24, 0xEA	; 234
 10a:	90 e0       	ldi	r25, 0x00	; 0
 10c:	21 50       	subi	r18, 0x01	; 1
 10e:	80 40       	sbci	r24, 0x00	; 0
 110:	90 40       	sbci	r25, 0x00	; 0
 112:	e1 f7       	brne	.-8      	; 0x10c <main+0x76>
 114:	00 c0       	rjmp	.+0      	; 0x116 <main+0x80>
 116:	00 00       	nop
        _delay_ms(300);
        SEG7_PORT = digits[4];
 118:	80 85       	ldd	r24, Z+8	; 0x08
 11a:	88 bb       	out	0x18, r24	; 24
 11c:	2f e5       	ldi	r18, 0x5F	; 95
 11e:	8a ee       	ldi	r24, 0xEA	; 234
 120:	90 e0       	ldi	r25, 0x00	; 0
 122:	21 50       	subi	r18, 0x01	; 1
 124:	80 40       	sbci	r24, 0x00	; 0
 126:	90 40       	sbci	r25, 0x00	; 0
 128:	e1 f7       	brne	.-8      	; 0x122 <main+0x8c>
 12a:	00 c0       	rjmp	.+0      	; 0x12c <main+0x96>
 12c:	00 00       	nop
        _delay_ms(300);
        SEG7_PORT = digits[5];
 12e:	82 85       	ldd	r24, Z+10	; 0x0a
 130:	88 bb       	out	0x18, r24	; 24
 132:	2f e5       	ldi	r18, 0x5F	; 95
 134:	8a ee       	ldi	r24, 0xEA	; 234
 136:	90 e0       	ldi	r25, 0x00	; 0
 138:	21 50       	subi	r18, 0x01	; 1
 13a:	80 40       	sbci	r24, 0x00	; 0
 13c:	90 40       	sbci	r25, 0x00	; 0
 13e:	e1 f7       	brne	.-8      	; 0x138 <main+0xa2>
 140:	00 c0       	rjmp	.+0      	; 0x142 <main+0xac>
 142:	00 00       	nop
        _delay_ms(300);
        SEG7_PORT = digits[6];
 144:	84 85       	ldd	r24, Z+12	; 0x0c
 146:	88 bb       	out	0x18, r24	; 24
 148:	2f e5       	ldi	r18, 0x5F	; 95
 14a:	8a ee       	ldi	r24, 0xEA	; 234
 14c:	90 e0       	ldi	r25, 0x00	; 0
 14e:	21 50       	subi	r18, 0x01	; 1
 150:	80 40       	sbci	r24, 0x00	; 0
 152:	90 40       	sbci	r25, 0x00	; 0
 154:	e1 f7       	brne	.-8      	; 0x14e <main+0xb8>
 156:	00 c0       	rjmp	.+0      	; 0x158 <main+0xc2>
 158:	00 00       	nop
        _delay_ms(300);
        SEG7_PORT = digits[7];
 15a:	86 85       	ldd	r24, Z+14	; 0x0e
 15c:	88 bb       	out	0x18, r24	; 24
 15e:	2f e5       	ldi	r18, 0x5F	; 95
 160:	8a ee       	ldi	r24, 0xEA	; 234
 162:	90 e0       	ldi	r25, 0x00	; 0
 164:	21 50       	subi	r18, 0x01	; 1
 166:	80 40       	sbci	r24, 0x00	; 0
 168:	90 40       	sbci	r25, 0x00	; 0
 16a:	e1 f7       	brne	.-8      	; 0x164 <main+0xce>
 16c:	00 c0       	rjmp	.+0      	; 0x16e <main+0xd8>
 16e:	00 00       	nop
        _delay_ms(300);
        SEG7_PORT = digits[8];
 170:	80 89       	ldd	r24, Z+16	; 0x10
 172:	88 bb       	out	0x18, r24	; 24
 174:	2f e5       	ldi	r18, 0x5F	; 95
 176:	8a ee       	ldi	r24, 0xEA	; 234
 178:	90 e0       	ldi	r25, 0x00	; 0
 17a:	21 50       	subi	r18, 0x01	; 1
 17c:	80 40       	sbci	r24, 0x00	; 0
 17e:	90 40       	sbci	r25, 0x00	; 0
 180:	e1 f7       	brne	.-8      	; 0x17a <main+0xe4>
 182:	00 c0       	rjmp	.+0      	; 0x184 <main+0xee>
 184:	00 00       	nop
        _delay_ms(300);
        SEG7_PORT = digits[9];
 186:	82 89       	ldd	r24, Z+18	; 0x12
 188:	88 bb       	out	0x18, r24	; 24
 18a:	2f e5       	ldi	r18, 0x5F	; 95
 18c:	8a ee       	ldi	r24, 0xEA	; 234
 18e:	90 e0       	ldi	r25, 0x00	; 0
 190:	21 50       	subi	r18, 0x01	; 1
 192:	80 40       	sbci	r24, 0x00	; 0
 194:	90 40       	sbci	r25, 0x00	; 0
 196:	e1 f7       	brne	.-8      	; 0x190 <main+0xfa>
 198:	00 c0       	rjmp	.+0      	; 0x19a <main+0x104>
 19a:	00 00       	nop
        _delay_ms(300);
        SEG7_PORT = digits[8];
 19c:	80 89       	ldd	r24, Z+16	; 0x10
 19e:	88 bb       	out	0x18, r24	; 24
 1a0:	2f e5       	ldi	r18, 0x5F	; 95
 1a2:	8a ee       	ldi	r24, 0xEA	; 234
 1a4:	90 e0       	ldi	r25, 0x00	; 0
 1a6:	21 50       	subi	r18, 0x01	; 1
 1a8:	80 40       	sbci	r24, 0x00	; 0
 1aa:	90 40       	sbci	r25, 0x00	; 0
 1ac:	e1 f7       	brne	.-8      	; 0x1a6 <main+0x110>
 1ae:	00 c0       	rjmp	.+0      	; 0x1b0 <main+0x11a>
 1b0:	00 00       	nop
        _delay_ms(300);
        SEG7_PORT = digits[7];
 1b2:	86 85       	ldd	r24, Z+14	; 0x0e
 1b4:	88 bb       	out	0x18, r24	; 24
 1b6:	2f e5       	ldi	r18, 0x5F	; 95
 1b8:	8a ee       	ldi	r24, 0xEA	; 234
 1ba:	90 e0       	ldi	r25, 0x00	; 0
 1bc:	21 50       	subi	r18, 0x01	; 1
 1be:	80 40       	sbci	r24, 0x00	; 0
 1c0:	90 40       	sbci	r25, 0x00	; 0
 1c2:	e1 f7       	brne	.-8      	; 0x1bc <main+0x126>
 1c4:	00 c0       	rjmp	.+0      	; 0x1c6 <main+0x130>
 1c6:	00 00       	nop
        _delay_ms(300);
        SEG7_PORT = digits[6];
 1c8:	84 85       	ldd	r24, Z+12	; 0x0c
 1ca:	88 bb       	out	0x18, r24	; 24
 1cc:	2f e5       	ldi	r18, 0x5F	; 95
 1ce:	8a ee       	ldi	r24, 0xEA	; 234
 1d0:	90 e0       	ldi	r25, 0x00	; 0
 1d2:	21 50       	subi	r18, 0x01	; 1
 1d4:	80 40       	sbci	r24, 0x00	; 0
 1d6:	90 40       	sbci	r25, 0x00	; 0
 1d8:	e1 f7       	brne	.-8      	; 0x1d2 <main+0x13c>
 1da:	00 c0       	rjmp	.+0      	; 0x1dc <main+0x146>
 1dc:	00 00       	nop
        _delay_ms(300);
        SEG7_PORT = digits[5];
 1de:	82 85       	ldd	r24, Z+10	; 0x0a
 1e0:	88 bb       	out	0x18, r24	; 24
 1e2:	2f e5       	ldi	r18, 0x5F	; 95
 1e4:	8a ee       	ldi	r24, 0xEA	; 234
 1e6:	90 e0       	ldi	r25, 0x00	; 0
 1e8:	21 50       	subi	r18, 0x01	; 1
 1ea:	80 40       	sbci	r24, 0x00	; 0
 1ec:	90 40       	sbci	r25, 0x00	; 0
 1ee:	e1 f7       	brne	.-8      	; 0x1e8 <main+0x152>
 1f0:	00 c0       	rjmp	.+0      	; 0x1f2 <main+0x15c>
 1f2:	00 00       	nop
        _delay_ms(300);
        SEG7_PORT = digits[4];
 1f4:	80 85       	ldd	r24, Z+8	; 0x08
 1f6:	88 bb       	out	0x18, r24	; 24
 1f8:	2f e5       	ldi	r18, 0x5F	; 95
 1fa:	8a ee       	ldi	r24, 0xEA	; 234
 1fc:	90 e0       	ldi	r25, 0x00	; 0
 1fe:	21 50       	subi	r18, 0x01	; 1
 200:	80 40       	sbci	r24, 0x00	; 0
 202:	90 40       	sbci	r25, 0x00	; 0
 204:	e1 f7       	brne	.-8      	; 0x1fe <main+0x168>
 206:	00 c0       	rjmp	.+0      	; 0x208 <__EEPROM_REGION_LENGTH__+0x8>
 208:	00 00       	nop
        _delay_ms(300);
        SEG7_PORT = digits[3];
 20a:	86 81       	ldd	r24, Z+6	; 0x06
 20c:	88 bb       	out	0x18, r24	; 24
 20e:	2f e5       	ldi	r18, 0x5F	; 95
 210:	8a ee       	ldi	r24, 0xEA	; 234
 212:	90 e0       	ldi	r25, 0x00	; 0
 214:	21 50       	subi	r18, 0x01	; 1
 216:	80 40       	sbci	r24, 0x00	; 0
 218:	90 40       	sbci	r25, 0x00	; 0
 21a:	e1 f7       	brne	.-8      	; 0x214 <__EEPROM_REGION_LENGTH__+0x14>
 21c:	00 c0       	rjmp	.+0      	; 0x21e <__EEPROM_REGION_LENGTH__+0x1e>
 21e:	00 00       	nop
        _delay_ms(300);
        SEG7_PORT = digits[2];
 220:	84 81       	ldd	r24, Z+4	; 0x04
 222:	88 bb       	out	0x18, r24	; 24
 224:	2f e5       	ldi	r18, 0x5F	; 95
 226:	8a ee       	ldi	r24, 0xEA	; 234
 228:	90 e0       	ldi	r25, 0x00	; 0
 22a:	21 50       	subi	r18, 0x01	; 1
 22c:	80 40       	sbci	r24, 0x00	; 0
 22e:	90 40       	sbci	r25, 0x00	; 0
 230:	e1 f7       	brne	.-8      	; 0x22a <__EEPROM_REGION_LENGTH__+0x2a>
 232:	00 c0       	rjmp	.+0      	; 0x234 <__EEPROM_REGION_LENGTH__+0x34>
 234:	00 00       	nop
        _delay_ms(300);
        SEG7_PORT = digits[1];
 236:	82 81       	ldd	r24, Z+2	; 0x02
 238:	88 bb       	out	0x18, r24	; 24
 23a:	2f e5       	ldi	r18, 0x5F	; 95
 23c:	8a ee       	ldi	r24, 0xEA	; 234
 23e:	90 e0       	ldi	r25, 0x00	; 0
 240:	21 50       	subi	r18, 0x01	; 1
 242:	80 40       	sbci	r24, 0x00	; 0
 244:	90 40       	sbci	r25, 0x00	; 0
 246:	e1 f7       	brne	.-8      	; 0x240 <__EEPROM_REGION_LENGTH__+0x40>
 248:	00 c0       	rjmp	.+0      	; 0x24a <__EEPROM_REGION_LENGTH__+0x4a>
 24a:	00 00       	nop
 24c:	37 cf       	rjmp	.-402    	; 0xbc <main+0x26>

0000024e <_exit>:
 24e:	f8 94       	cli

00000250 <__stop_program>:
 250:	ff cf       	rjmp	.-2      	; 0x250 <__stop_program>
