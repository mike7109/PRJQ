
lesson_4_7seg.elf:     file format elf32-avr

Sections:
Idx Name          Size      VMA       LMA       File off  Algn
  0 .text         0000005a  00000000  00000000  00000054  2**1
                  CONTENTS, ALLOC, LOAD, READONLY, CODE
  1 .data         00000000  00800060  00800060  000000ae  2**0
                  CONTENTS, ALLOC, LOAD, DATA
  2 .comment      00000030  00000000  00000000  000000ae  2**0
                  CONTENTS, READONLY
  3 .note.gnu.avr.deviceinfo 0000003c  00000000  00000000  000000e0  2**2
                  CONTENTS, READONLY
  4 .debug_aranges 00000020  00000000  00000000  0000011c  2**0
                  CONTENTS, READONLY, DEBUGGING
  5 .debug_info   00000514  00000000  00000000  0000013c  2**0
                  CONTENTS, READONLY, DEBUGGING
  6 .debug_abbrev 000004a4  00000000  00000000  00000650  2**0
                  CONTENTS, READONLY, DEBUGGING
  7 .debug_line   000001cf  00000000  00000000  00000af4  2**0
                  CONTENTS, READONLY, DEBUGGING
  8 .debug_frame  00000024  00000000  00000000  00000cc4  2**2
                  CONTENTS, READONLY, DEBUGGING
  9 .debug_str    000002a8  00000000  00000000  00000ce8  2**0
                  CONTENTS, READONLY, DEBUGGING
 10 .debug_ranges 00000010  00000000  00000000  00000f90  2**0
                  CONTENTS, READONLY, DEBUGGING

Disassembly of section .text:

00000000 <__vectors>:
   0:	12 c0       	rjmp	.+36     	; 0x26 <__ctors_end>
   2:	19 c0       	rjmp	.+50     	; 0x36 <__bad_interrupt>
   4:	18 c0       	rjmp	.+48     	; 0x36 <__bad_interrupt>
   6:	17 c0       	rjmp	.+46     	; 0x36 <__bad_interrupt>
   8:	16 c0       	rjmp	.+44     	; 0x36 <__bad_interrupt>
   a:	15 c0       	rjmp	.+42     	; 0x36 <__bad_interrupt>
   c:	14 c0       	rjmp	.+40     	; 0x36 <__bad_interrupt>
   e:	13 c0       	rjmp	.+38     	; 0x36 <__bad_interrupt>
  10:	12 c0       	rjmp	.+36     	; 0x36 <__bad_interrupt>
  12:	11 c0       	rjmp	.+34     	; 0x36 <__bad_interrupt>
  14:	10 c0       	rjmp	.+32     	; 0x36 <__bad_interrupt>
  16:	0f c0       	rjmp	.+30     	; 0x36 <__bad_interrupt>
  18:	0e c0       	rjmp	.+28     	; 0x36 <__bad_interrupt>
  1a:	0d c0       	rjmp	.+26     	; 0x36 <__bad_interrupt>
  1c:	0c c0       	rjmp	.+24     	; 0x36 <__bad_interrupt>
  1e:	0b c0       	rjmp	.+22     	; 0x36 <__bad_interrupt>
  20:	0a c0       	rjmp	.+20     	; 0x36 <__bad_interrupt>
  22:	09 c0       	rjmp	.+18     	; 0x36 <__bad_interrupt>
  24:	08 c0       	rjmp	.+16     	; 0x36 <__bad_interrupt>

00000026 <__ctors_end>:
  26:	11 24       	eor	r1, r1
  28:	1f be       	out	0x3f, r1	; 63
  2a:	cf e5       	ldi	r28, 0x5F	; 95
  2c:	d4 e0       	ldi	r29, 0x04	; 4
  2e:	de bf       	out	0x3e, r29	; 62
  30:	cd bf       	out	0x3d, r28	; 61
  32:	02 d0       	rcall	.+4      	; 0x38 <main>
  34:	10 c0       	rjmp	.+32     	; 0x56 <_exit>

00000036 <__bad_interrupt>:
  36:	e4 cf       	rjmp	.-56     	; 0x0 <__vectors>

00000038 <main>:
#define SEG7_DDR DDRB
#define SEG7_PORT PORTB

int main(void)
{
    DDRD = 0b11111111;
  38:	8f ef       	ldi	r24, 0xFF	; 255
  3a:	81 bb       	out	0x11, r24	; 17
    PORTD = 0b00000000;
  3c:	12 ba       	out	0x12, r1	; 18

    DDRC = 0b0000000;
  3e:	14 ba       	out	0x14, r1	; 20
    PORTC = 0b0000001;
  40:	81 e0       	ldi	r24, 0x01	; 1
  42:	85 bb       	out	0x15, r24	; 21
// 		SEG7_PORT = 0b01101111; //9
// 		_delay_ms(300);
//       SEG7_PORT = 0b10000000; //точка
// 		_delay_ms(500)

        if (PINC == 0b1000000) {
  44:	83 b3       	in	r24, 0x13	; 19
  46:	80 34       	cpi	r24, 0x40	; 64
  48:	19 f4       	brne	.+6      	; 0x50 <__SREG__+0x11>
            PORTD = 0b00000110; //1
  4a:	86 e0       	ldi	r24, 0x06	; 6
  4c:	82 bb       	out	0x12, r24	; 18
  4e:	fa cf       	rjmp	.-12     	; 0x44 <__SREG__+0x5>
        } else {
            PORTD = 0b00111111; //0
  50:	8f e3       	ldi	r24, 0x3F	; 63
  52:	82 bb       	out	0x12, r24	; 18
  54:	f7 cf       	rjmp	.-18     	; 0x44 <__SREG__+0x5>

00000056 <_exit>:
  56:	f8 94       	cli

00000058 <__stop_program>:
  58:	ff cf       	rjmp	.-2      	; 0x58 <__stop_program>
